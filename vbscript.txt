    'Catch incoming arguments (filenames dropped onto vbscript)
If WScript.Arguments.Count > 0 Then
		filePathAndName = replace(Wscript.Arguments(0), "\", "/")
end if



    'Execute shell command
dim wSh
Set wSh = WScript.CreateObject("WScript.Shell")
wsh.run cmdString, 1, TRUE



    'Execute macro from one Excel file on another Excel file
Dim xlApp 
Dim xlBook 
Set xlApp = CreateObject("Excel.Application") 
xlApp.Visible = true
Set xlBook = xlApp.Workbooks.Open(targetFilePathAndName, 0, True) 
xlApp.Run "'macroFilePathAndName'!macroName"
xlApp.Quit 
Set xlBook = Nothing 
Set xlApp = Nothing 



    'Read and Write from text file
set iFile = fso.OpenTextFile(Arg)
set oFile = fso.OpenTextFile(replace(Arg, ".","_e."))
do until iFile.AtEndOfStream	
  newArg = iFile.ReadLine
  oFile.writeLine(newArg)
loop
iFile.close
oFile.close



    'Look through files in current folder
sFolder = Left(WScript.ScriptFullName, InStrRev(WScript.ScriptFullName, "\"))
Set fso = CreateObject("Scripting.FileSystemObject")
Set folder = fso.GetFolder(sFolder)
Set files = folder.Files
For each folderIdx In files
  fileName = folderIdx.name
next



    'Is Excel file open already?
'Is .csv file already open?  https://stackoverflow.com/questions/17549641/check-if-a-specific-excel-file-is-open-when-several-excel-files-are-open-and-act
targetOpen = false
On Error Resume Next
Set xl = GetObject(, "Excel.Application")  'attach to running Excel instance
If Err or Err.Number <> 429Then
    Set wb = Nothing
	For Each obj In xl.Workbooks
	msgbox obj.Name
	  If obj.Name = filePathAndName Then  'use obj.FullName for full path
		Set wb = obj
		Exit For
	  End If
	Next
	If wb Is Nothing Then
	  targetOpen = false
	else
		targetOpen = true
	End If
End If
On Error Goto 0
